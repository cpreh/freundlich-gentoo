--- plugins/Oculars/src/Oculars.cpp.old	2010-04-16 18:32:41.000000000 +0200
+++ plugins/Oculars/src/Oculars.cpp	2010-04-16 18:34:15.000000000 +0200
@@ -227,8 +227,8 @@ double Oculars::getCallOrder(StelModuleA
 
 void Oculars::handleMouseClicks(class QMouseEvent* event)
 {
-	StelCore::StelCore *core = StelApp::getInstance().getCore();
-	StelMovementMgr::StelMovementMgr *movementManager = core->getMovementMgr();
+	StelCore *core = StelApp::getInstance().getCore();
+	StelMovementMgr *movementManager = core->getMovementMgr();
 	if (StelApp::getInstance().getStelObjectMgr().getWasSelected()){
 		LabelMgr *labelManager = GETSTELMODULE(LabelMgr);
 
@@ -384,7 +384,7 @@ void Oculars::enableOcular(bool b)
 		loadDatabaseObjects();
 	}
 
-	StelCore::StelCore *core = StelApp::getInstance().getCore();
+	StelCore *core = StelApp::getInstance().getCore();
 	LabelMgr* labelManager = GETSTELMODULE(LabelMgr);
 	// Toggle the plugin on & off.  To toggle on, we want to ensure there is a selected object.
 	if (!flagShowOculars && !StelApp::getInstance().getStelObjectMgr().getWasSelected()) {
@@ -466,7 +466,7 @@ void Oculars::toggleCrosshair()
 void Oculars::drawCrosshairs()
 {
 	const StelProjectorP projector = StelApp::getInstance().getCore()->getProjection(StelCore::FrameEquinoxEqu);
-	StelCore::StelCore *core = StelApp::getInstance().getCore();
+	StelCore *core = StelApp::getInstance().getCore();
 	StelProjector::StelProjectorParams params = core->getCurrentStelProjectorParams();
 	// Center of screen
 	Vec2i centerScreen(projector->getViewportPosX()+projector->getViewportWidth()/2,
@@ -588,8 +588,8 @@ void Oculars::interceptMovementKey(QKeyE
 	// We onle care about the arrow keys.  This flag tracks that.
 	bool consumeEvent = false;
 
-	StelCore::StelCore *core = StelApp::getInstance().getCore();
-	StelMovementMgr::StelMovementMgr *movementManager = core->getMovementMgr();
+	StelCore *core = StelApp::getInstance().getCore();
+	StelMovementMgr *movementManager = core->getMovementMgr();
 
 	if (event->type() == QEvent::KeyPress)
 	{
@@ -693,7 +693,7 @@ void Oculars::loadDatabaseObjects()
 
 void Oculars::paintMask()
 {
-	StelCore::StelCore *core = StelApp::getInstance().getCore();
+	StelCore *core = StelApp::getInstance().getCore();
 	StelProjector::StelProjectorParams params = core->getCurrentStelProjectorParams();
 
 	glDisable(GL_BLEND);
@@ -774,9 +774,9 @@ void Oculars::validateIniFile()
 
 void Oculars::unzoomOcular()
 {
-	StelCore::StelCore *core = StelApp::getInstance().getCore();
-	StelMovementMgr::StelMovementMgr *movementManager = core->getMovementMgr();
-	GridLinesMgr::GridLinesMgr *gridManager = (GridLinesMgr *)StelApp::getInstance().getModuleMgr().getModule("GridLinesMgr");
+	StelCore *core = StelApp::getInstance().getCore();
+	StelMovementMgr *movementManager = core->getMovementMgr();
+	GridLinesMgr *gridManager = (GridLinesMgr *)StelApp::getInstance().getModuleMgr().getModule("GridLinesMgr");
 
 	gridManager->setFlagAzimuthalGrid(flagAzimuthalGrid);
 	gridManager->setFlagEquatorGrid(flagEquatorGrid);
@@ -801,7 +801,7 @@ void Oculars::zoom(bool rezoom)
 
 	if (flagShowOculars)  {
 		if (!rezoom)  {
-			GridLinesMgr::GridLinesMgr *gridManager = (GridLinesMgr *)StelApp::getInstance().getModuleMgr().getModule("GridLinesMgr");
+			GridLinesMgr *gridManager = (GridLinesMgr *)StelApp::getInstance().getModuleMgr().getModule("GridLinesMgr");
 			// Current state
 			flagAzimuthalGrid = gridManager->getFlagAzimuthalGrid();
 			flagEquatorGrid = gridManager->getFlagEquatorGrid();
@@ -821,9 +821,9 @@ void Oculars::zoom(bool rezoom)
 
 void Oculars::zoomOcular()
 {
-	StelCore::StelCore *core = StelApp::getInstance().getCore();
-	StelMovementMgr::StelMovementMgr *movementManager = core->getMovementMgr();
-	GridLinesMgr::GridLinesMgr *gridManager =
+	StelCore *core = StelApp::getInstance().getCore();
+	StelMovementMgr *movementManager = core->getMovementMgr();
+	GridLinesMgr *gridManager =
 		(GridLinesMgr *)StelApp::getInstance().getModuleMgr().getModule("GridLinesMgr");
 
 	gridManager->setFlagAzimuthalGrid(false);
