---
---
 browser/components/preferences/advanced.js |    8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

Index: mozilla/browser/components/preferences/advanced.js
===================================================================
--- mozilla.orig/browser/components/preferences/advanced.js
+++ mozilla/browser/components/preferences/advanced.js
@@ -382,50 +382,48 @@
   {
     var aus = 
         Components.classes["@mozilla.org/updates/update-service;1"].
         getService(Components.interfaces.nsIApplicationUpdateService);
 
     var enabledPref = document.getElementById("app.update.enabled");
     var enableAppUpdate = document.getElementById("enableAppUpdate");
 
-    enableAppUpdate.disabled = !aus.canUpdate || enabledPref.locked;
+    enableAppUpdate.disabled = true;
   },
 
   /**
    * Enables/disables UI for "when updates are found" based on the values,
    * and "locked" states of associated preferences.
    */
   updateAutoItems: function () 
   {
     var enabledPref = document.getElementById("app.update.enabled");
     var autoPref = document.getElementById("app.update.auto");
     
     var updateModeLabel = document.getElementById("updateModeLabel");
     var updateMode = document.getElementById("updateMode");
     
-    var disable = enabledPref.locked || !enabledPref.value ||
-                  autoPref.locked;
+    var disable = true;
     updateModeLabel.disabled = updateMode.disabled = disable;
   },
 
   /**
    * Enables/disables the "warn if incompatible extensions/themes exist" UI
    * based on the values and "locked" states of various preferences.
    */
   updateModeItems: function () 
   {
     var enabledPref = document.getElementById("app.update.enabled");
     var autoPref = document.getElementById("app.update.auto");
     var modePref = document.getElementById("app.update.mode");
     
     var warnIncompatible = document.getElementById("warnIncompatible");
     
-    var disable = enabledPref.locked || !enabledPref.value || autoPref.locked ||
-                  !autoPref.value || modePref.locked;
+    var disable = true;
     warnIncompatible.disabled = disable;
   },
 
   /**
    * Stores the value of the app.update.mode preference, which is a tristate
    * integer preference.  We store the value here so that we can properly
    * restore the preference value if the UI reflecting the preference value
    * is in a state which can represent either of two integer values (as
