--- python-updater	2011-03-10 15:38:12.000000000 +0100
+++ python-updater	2011-03-10 15:16:07.000000000 +0100
@@ -41,8 +41,9 @@ PYTHON3_VERSIONS="3.0 3.1 3.2 3.3"
 PYTHON_VERSIONS="${PYTHON2_VERSIONS} ${PYTHON3_VERSIONS}"
 
 SUPPORTED_PMS="portage pkgcore paludis"
-PMS_COMMAND=( "emerge" "pmerge" "paludis" )
-PMS_OPTIONS=( "-Dv1 --keep-going" "-Do" "-i1" )
+PMS_COMMAND=( "emerge" "pmerge" "cave" )
+PMS_OPTIONS=( "-Dv1 --keep-going" "-Do" "resolve --preserve-world --lazy --continue-on-failure if-independent --execute" )
+PMS_PRETEND_OPTIONS=( "-p" "-p" "--no-execute" )
 PMS_INDEX=0
 CUSTOM_PMS_COMMAND=""
 ADDITIONAL_OPTIONS=""
@@ -134,7 +135,7 @@ has_version() {
     elif [[ "${PMS_COMMAND[${PMS_INDEX}]}" == "pmerge" ]]; then
         pquery --vdb "${1}"
     else
-        paludis --has-version "${1}"
+        cave has-version "${1}"
     fi
 }
 
@@ -170,7 +171,7 @@ get_USE_PYTHON() {
             USE_PYTHON="$(/usr/bin/portageq envvar USE_PYTHON)"
         fi
     else
-        USE_PYTHON="$(paludis --environment-variable "${1}/${2}${3:+:}${3}::/?" USE_PYTHON)"
+        USE_PTYHON="$(cave print-id-environment-variable --best "${1}/${2}${3:+:}${3}::/?" --variable-name USE_PYTHON --format '%v\n')"
     fi
     if [[ -z "${USE_PYTHON}" ]]; then
         USE_PYTHON="${NEW_PYTHON2_VERSION} ${NEW_PYTHON3_VERSION}"
@@ -211,7 +212,7 @@ get_RESTRICT_PYTHON_ABIS() {
             grep "^RESTRICT_PYTHON_ABIS=" "${ebuild_path}" | sed -e "s/RESTRICT_PYTHON_ABIS=[\"']\(.*\)[\"']/\1/"
         fi
     else
-        paludis --environment-variable "${1}/${2}${3:+:}${3}::/?" RESTRICT_PYTHON_ABIS
+        cave print-id-environment-variable --best "${1}/${2}${3:+:}${3}::/?" --variable-name RESTRICT_PYTHON_ABIS --format '%v\n'
     fi
 }
 
@@ -654,7 +655,7 @@ if [[ "${PMS_COMMAND[${PMS_INDEX}]}" ==
 fi
 
 # Only pretending?
-[[ PRETEND -eq 1 ]] && PMS_OPTIONS[${PMS_INDEX}]="${PMS_OPTIONS[${PMS_INDEX}]} -p"
+[[ PRETEND -eq 1 ]] && PMS_OPTIONS[${PMS_INDEX}]="${PMS_OPTIONS[${PMS_INDEX}]} ${PMS_PRETEND_OPTIONS[${PMS_INDEX}]}"
 
 # (Pretend to) reinstall packages
 if [[ -n "${PKGS_TO_REMERGE}" ]]; then
